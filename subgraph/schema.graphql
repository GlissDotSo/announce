
type Inbox @entity {
  id: ID!
  user: User!
  items: [InboxItem!]! @derivedFrom(field: "inbox")
  # read: [FeedPub!]!
}

type InboxItem @entity {
  id: ID!
  inbox: Inbox!
  item: FeedPub!
}

type FeedPub @entity {
  id: ID!
  feed: Feed!
  author: Profile!
  pub: Post!
  createdAt: BigInt! # uint256
}

type Feed @entity {
  id: ID!
  profile: Profile!
  feedId: BigInt!
  # authors: 
  owner: Bytes! # address
  name: String
  feedPubs: [FeedPub!]! @derivedFrom(field: "feed")
}

type User @entity {
  id: ID!
  inbox: Inbox!
  profile: Profile!
}

type FollowingEdge @entity {
  id: ID!
  
  # Followed from.
  from: Profile!
  # Followed user.
  to: Profile!
}



# Track new Follow NFT's being cloned.
# Track Follow NFT mints.

type FollowNFTContract @entity {
  id: ID!
  profile: Profile!
  address: Bytes! # address
  deployedAt: BigInt!
}

type FollowNFT @entity {
  id: ID!
  contract: FollowNFTContract!
  owner: Bytes! # address
}

type Profile @entity {
  id: ID! # profileId uint256
  creator: Bytes! # address
  owner: Bytes! # address
  profileId: BigInt! # uint256
  pubCount: BigInt! # uint256
  followNFT: FollowNFTContract!
  handle: String! # string
  imageURI: String! # string
  followNFTURI: String! # string
  createdOn: BigInt! # uint256
  followModule: Bytes! # address
  followModuleReturnData: Bytes!
  dispatcher: Bytes!

  user: User! @derivedFrom(field: "profile")

  following: [FollowingEdge!]! @derivedFrom(field: "from")
  followers: [FollowingEdge!]! @derivedFrom(field: "to")
}

type Comment @entity {
  id: ID! # txn
  profileId: BigInt! # uint256
  pubId: BigInt! # uint256
  contentURI: String! # string
  profileIdPointed: BigInt!
  pubIdPointed: BigInt!
  collectModule: Bytes!
  collectModuleReturnData: Bytes!
  referenceModule: Bytes!
  referenceModuleReturnData: Bytes!
  timestamp: BigInt!
}

type Mirror @entity {
  id: ID! # txn
  profileId: BigInt!
  pubId: BigInt!
  profileIdPointed: BigInt!
  pubIdPointed: BigInt!
  referenceModule: Bytes!
  referenceModuleReturnData: Bytes!
  timestamp: BigInt!
}

type SocialGraph @entity {
  id: ID! # address
  following: [Profile!]!
}

type ProfileCreatorWhitelist @entity {
  id: ID! # address
  isWhitelisted: Boolean!
  lastUpdated: BigInt!
}

type FollowModuleWhitelist @entity {
  id: ID! # address
  isWhitelisted: Boolean!
  lastUpdated: BigInt!
}

type ReferenceModuleWhitelist @entity {
  id: ID! # address
  isWhitelisted: Boolean!
  lastUpdated: BigInt!
}

type CollectModuleWhitelist @entity {
  id: ID! # address
  isWhitelisted: Boolean!
  lastUpdated: BigInt!
}

type Post @entity {
  id: ID! # uint256
  profileId: Profile!
  pubId: BigInt! # uint256
  content: String!
  contentURI: String! # string
  collectModule: Bytes! # address
  collectModuleReturnData: Bytes! # bytes
  referenceModule: Bytes! # address
  referenceModuleReturnData: Bytes! # bytes
  timestamp: BigInt! # uint256
}

